plugins {
    id 'java-library'
    id 'maven-publish'
}

test {
    useJUnitPlatform()
    afterSuite { desc, result ->
        if (!desc.parent) {
            logger.lifecycle("Integration test results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)")
            if (result.testCount == 0) {
                throw new IllegalStateException("No tests were found. Failing the build")
            }
        }
    }
}

dependencies {
    implementation project(":integration-test-api")

    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.6'
    compileOnly 'com.github.tomakehurst:wiremock:2.27.2'
    testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.32.0'

    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor project(":plugin")

//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    implementation project(':plugin')

    testAnnotationProcessor project(":plugin")
    testAnnotationProcessor "org.projectlombok:lombok:1.18.22"


    testImplementation('org.springframework.boot:spring-boot-starter-test:2.5.6') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.jeasy:easy-random-core:4.1.0'
    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation 'org.awaitility:awaitility:4.1.1'
}

tasks.create(type: Jar, name: 'stubsJar') {
    baseName = project.name
    classifier = 'stubs'
    from layout.buildDirectory.dir("stubsClasses")
}

task compileStubs(type: JavaCompile) {
    classpath  = compileJava.classpath
    source project.files { layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main") }
    destinationDirectory.set(file("$buildDir/stubsClasses"))
}

compileJava.finalizedBy(compileStubs)
stubsJar.dependsOn 'compileStubs'


publishing {
    publications {
        stubs(MavenPublication) {
            artifactId project.name
            artifact stubsJar
        }
    }
}
