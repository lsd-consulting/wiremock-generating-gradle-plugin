plugins {
    id 'java'
}

test {
    useJUnitPlatform()
    afterSuite { desc, result ->
        if (!desc.parent) {
            logger.lifecycle("Integration test results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)")
            if (result.testCount == 0) {
                throw new IllegalStateException("No tests were found. Failing the build")
            }
        }
    }
}

// The following setting is for handling auto-generated Spring config properties by the messaging library
sourceSets {
    main {
        resources.srcDirs "$projectDir/build/generated/resources"
    }
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'com.github.tomakehurst:wiremock:2.27.2'
    testImplementation 'com.github.tomakehurst:wiremock:2.27.2'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.32.0'

    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor project(":plugin")

//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    implementation project(':plugin')

    testAnnotationProcessor project(":plugin")
    testAnnotationProcessor "org.projectlombok:lombok:1.18.22"


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.jeasy:easy-random-core:4.1.0'
    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation 'org.awaitility:awaitility:4.0.2'
}